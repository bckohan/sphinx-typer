name: test

on: [push, pull_request, workflow_dispatch]

jobs:

  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run static analysis on bleeding and trailing edges
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          poetry install --with html --with pdf
      - name: Run Static Analysis
        run: |
          poetry run isort sphinxcontrib/typer
          poetry run black sphinxcontrib/typer --check
          poetry run doc8 -q doc
          poetry check
          poetry run pip check
          poetry run python -m readme_renderer ./README.rst -o /tmp/README.html

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        sphinx-version:
          - 'Sphinx~=7.0.0'
          - 'Sphinx~=7.2.0'
        exclude:
          - python-version: '3.12'
            sphinx-version: 'Sphinx~=7.0.0'
          - python-version: '3.8'
            sphinx-version: 'Sphinx~=7.2.0'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install Release Dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry run pip install --upgrade pip
        poetry install --with html --with pdf
        poetry run pip install -U "${{ matrix.sphinx-version }}"
    - name: Run Unit Tests
      run: |
        poetry run pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
