name: test

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Set to on, to open ssh debug session.'
        required: true
        default: 'off'
  schedule:
    - cron: '0 13 * * *'  # Runs at 6 am pacific every day
  

jobs:

  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run static analysis on bleeding and trailing edges
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          poetry install -E html -E png -E pdf
      - name: Run Static Analysis
        run: |
          poetry run ruff format sphinxcontrib/typer
          poetry run ruff check --fix --select I sphinxcontrib/typer
          poetry run ruff check sphinxcontrib/typer
          poetry check
          poetry run pip check
          poetry run python -m readme_renderer ./README.md

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        sphinx-version:
          - 'Sphinx~=7.0.0'
          - 'Sphinx~=7.2.0'
        exclude:
          - python-version: '3.12'
            sphinx-version: 'Sphinx~=7.0.0'
          - python-version: '3.8'
            sphinx-version: 'Sphinx~=7.2.0'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install Release Dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry run pip install --upgrade pip
        poetry install -E html -E png -E pdf
        poetry run pip install -U "${{ matrix.sphinx-version }}"

    - name: Install Emacs
      if: ${{ github.event.inputs.debug == 'on' }}
      run: |
        sudo apt install emacs
    - name: Setup tmate session
      if: ${{ github.event.inputs.debug == 'on' }}
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true
      timeout-minutes: 60

    - name: Run Unit Tests
      run: |
        poetry run pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
